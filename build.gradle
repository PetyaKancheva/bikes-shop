plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'bg.softuni'


java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

configurations {
    all*.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    all*.exclude group: 'ch.qos.logback', module: 'logback-classic'
    all*.exclude group: 'ch.qos.logback', module: 'logback-core'
}
dependencies {


    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6:3.1.3.RELEASE'
    implementation 'org.springframework.session:spring-session-core'


//	runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'org.thymeleaf.testing:thymeleaf-testing-lib:3.1.3.RELEASE'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'com.icegreen:greenmail:2.0.0'
    testImplementation 'org.hsqldb:hsqldb'
    testImplementation 'org.mock-server:mockserver-netty-no-dependencies:5.15.0'

//	testImplementation 'org.mock-server:mockserver-client-java-no-dependencies:5.15.0'

}

tasks.named('test') {
    useJUnitPlatform()
}



//val mockitoAgent = configurations.create("mockitoAgent")
//dependencies {
//	testImplementation(libs.mockito)
//	mockitoAgent(libs.mockito) { isTransitive = false }
//}
//tasks {
//	test {
//		jvmArgs.add("-javaagent:${mockitoAgent.asPath}")
//	}
//}
